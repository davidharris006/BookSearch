{"version":3,"sources":["components/Bookcards.js","util/API.js","pages/Saved.js","components/Topbar.js","pages/Search.js","App.js","registerServiceWorker.js","index.js"],"names":["Bookcard","props","react_default","a","createElement","src","img","title","Author","onClick","id","API","search","query","axios","get","getBooks","saveBook","book","post","Saved","state","savedbooks","getSavedBooks","then","res","_this","setState","Object","objectSpread","data","catch","err","console","log","this","map","Bookcards","Component","Topbar","className","Search","books","searchBooks","items","handleInputChange","event","target","value","handleClick","preventDefault","saveBookClick","savedBook","filter","volumeInfo","author","authors","join","description","image","imageLinks","thumbnail","link","infoLink","_this2","components_Topbar","type","onChange","href","App","react_router_dom","react_router","path","exact","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.077149b9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Bookcard(props) {\r\n    return (\r\n        <div>\r\n            <img src={props.img} />\r\n            <div>\r\n                Title: {props.title}\r\n                Author: {props.Author}\r\n            </div>\r\n            <button onClick={props.onClick} id={props.id}>Save</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Bookcard;","import axios from \"axios\";\r\nconst BASEURL = \"https://www.googleapis.com/books/v1/volumes?q=\";\r\n\r\n\r\n\r\n\r\nexport default {\r\n  search: function(query) {\r\n    return axios.get(BASEURL + query );\r\n  },\r\n  getBooks: function() {\r\n    return axios.get(\"/api/books\")\r\n  },\r\n\r\n  saveBook: function(book) {\r\n    return axios.post(\"/api/books\", book);\r\n  }\r\n  \r\n};\r\n\r\n","import React, { Component } from \"react\";\r\nimport Bookcard from \"../components/Bookcards\"\r\nimport API from \"../util/API\"\r\n\r\nclass Saved extends Component {\r\n    state = {\r\n        savedbooks: []\r\n    }\r\n\r\n    getSavedBooks = () => {\r\n        API.getBooks()\r\n        .then(res => this.setState({\r\n            ...this.state,\r\n            savedbooks: res.data\r\n        })\r\n        )\r\n        .catch(err => console.log(err));\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                {this.getSavedBooks()}\r\n                <h1>hello</h1>\r\n                { this.state.savedbooks.map((book) =>{\r\n                return <Bookcard />\r\n                })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Saved;","import React from \"react\";\r\n\r\n\r\nfunction Topbar(props) {\r\n    return (\r\n        <div>\r\n            <h1>Book Search</h1>\r\n            <nav className=\"navbar\">\r\n\r\n            </nav>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Topbar;\r\n","import React, { Component } from \"react\";\r\nimport Topbar from \"../components/Topbar\"\r\nimport Bookcard from \"../components/Bookcards\"\r\nimport API from \"../util/API\"\r\n\r\n\r\nclass Search extends Component {\r\n    state = {\r\n      books: [],\r\n      search: \"\"\r\n    };\r\n    \r\n    searchBooks = query =>{\r\n      API.search(query)\r\n        .then(res => this.setState({\r\n         ...this.state,\r\n          books: res.data.items\r\n        }))\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\nhandleInputChange = event => {\r\n    this.setState ({\r\n      ...this.state,\r\n      search: event.target.value\r\n    })\r\n  }\r\n\r\nhandleClick= event => {\r\n    event.preventDefault();\r\n    this.searchBooks(this.state.search)\r\n    \r\n    console.log(this.state.books);\r\n  \r\n  }\r\n\r\nsaveBookClick= event => {\r\n    event.preventDefault()\r\n    console.log(this.state.books);\r\n    let savedBook = this.state.books.filter((book) => book.id === event.target.id)\r\n  \r\n   API.saveBook({ \r\n    title: savedBook[0].volumeInfo.title,\r\n    author: savedBook[0].volumeInfo.authors.join(', '),\r\n    description: savedBook[0].volumeInfo.description,\r\n    image: savedBook[0].volumeInfo.imageLinks.thumbnail,\r\n    link: savedBook[0].volumeInfo.infoLink\r\n  })\r\n  }\r\n\r\nrender() {\r\n    return (\r\n\r\n      <div className=\"App\">\r\n       \r\n        <Topbar />\r\n        \r\n          \r\n        \r\n        <input type=\"text\" onChange={this.handleInputChange} ></input>\r\n        <button onClick={this.handleClick} >Submit</button>\r\n       <a href=\"https://localhost3000/saved\"> <button></button>\r\n         </a> \r\n        \r\n\r\n        {this.state.books.map((book) => {\r\n          return <Bookcard title={book.volumeInfo.title} Author={book.volumeInfo.authors} img={book.volumeInfo.imageLinks.thumbnail} onClick={this.saveBookClick} id={book.id}/>\r\n          })\r\n        }\r\n      </div>\r\n        \r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Saved from \"./pages/Saved\"\nimport Search from \"./pages/Search\"\n\n\n\nfunction App() {\n\n\n\n\n \n    return (\n      <Router>\n        <div>\n\n       \n       <Route path exact=\"/\" component={Search} />\n       <Route path =\"/saved\" component={Saved} />\n       \n    \n      </div>\n      </Router>\n        \n    );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}